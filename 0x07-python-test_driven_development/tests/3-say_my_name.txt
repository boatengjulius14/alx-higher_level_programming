===========================
How to Use 3-say_my_name.py
===========================

Adds and print arguments as part of a string
prints 'My name is <first_name> <last_name>

Usage
=====

Doctest for the function 'say_my_name' from '3-say_my_name'.

    >>> say_my_name = __import__('3-say_my_name').say_my_name

Correct inputs
==============
Case: passing two strings
    >>> say_my_name("Julius", "Addai")
    My name is Julius Addai

Case: passing only one string
    >>> say_my_name("Julius")
    My name is Julius 

Incorrect inputs
================
Case: passing no argument
    >>> say_my_name()
    Traceback (most recent call last):
    TypeError: say_my_name() missing 1 required positional argument: 'first_name'

Case: passing values of different data type
    >>> say_my_name(5)
    Traceback (most recent call last):
    TypeError: first_name must be a string or last_name must be a string

    >>> say_my_name(5, 6)
    Traceback (most recent call last):
    TypeError: first_name must be a string or last_name must be a string

    >>> say_my_name("Julius", 5)
    Traceback (most recent call last):
    TypeError: first_name must be a string or last_name must be a string

Case: passing more than 3 strings
    >>> say_my_name("Julius", "Addai", "Boateng")
    Traceback (most recent call last):
    TypeError: say_my_name() takes from 1 to 2 positional arguments but 3 were given
