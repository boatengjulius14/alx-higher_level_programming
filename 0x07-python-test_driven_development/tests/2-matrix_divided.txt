==============================
How to Use 2-matrix_divided.py
==============================

2-matrix_divided defines an function 'matrix_divided'.
matrix_divided divides all elements of a matrix matrix_divided returns a
new list by dividing all elements in the list of list, matrix

Usage
=====

Doctest for the function 'matrix_divided' from '2-matrix_divided'.

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Case: not passing a list of list
    >>> matrix_divided(5, 2)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix_divided("Hello", 2)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix_divided([2, 3], 2)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix_divided([[[5, 3]]], 2)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats


Case: passing matrix with different row sizes 
    >>> matrix_divided([[1, 2, 3], [4, 5]], 2)
    Traceback (most recent call last):
    TypeError: Each row of the matrix must have the same size

    >>> matrix_divided([[1, 2], [3, 4, 5, 6]], 2)
    Traceback (most recent call last):
    TypeError: Each row of the matrix must have the same size

    >>> matrix_divided([[1, 2], []], 2)
    Traceback (most recent call last):
    TypeError: Each row of the matrix must have the same size

    >>> matrix_divided([[], [1, 2]], 2)
    Traceback (most recent call last):
    TypeError: Each row of the matrix must have the same size

Case: passing div of a different data type aside int or float
    >>> matrix_divided([[1, 2], [3, 4]], 'b')
    Traceback (most recent call last):
    TypeError: div must be a number

Case: passing 0 as div
    >>> matrix_divided([[1, 2], [3, 4]], 0)
    Traceback (most recent call last):
    ZeroDivisionError: division by zero

    >>> matrix_divided()
    Traceback (most recent call last):
    TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

    >>> matrix_divided(5)
    Traceback (most recent call last):
    TypeError: matrix_divided() missing 1 required positional argument: 'div'

    >>> matrix_divided([[1, 2], [2, 3]])
    Traceback (most recent call last):
    TypeError: matrix_divided() missing 1 required positional argument: 'div'

Correct inputs
==============
Case: passing a float
    >>> matrix_divided([[10, 9, 8], [7, 6, 5]], 5.32932)
    [[1.88, 1.69, 1.5], [1.31, 1.13, 0.94]]

Case: passing an int
    >>> matrix_divided([[13234], [33283]], 100332)
    [[0.13], [0.33]]
