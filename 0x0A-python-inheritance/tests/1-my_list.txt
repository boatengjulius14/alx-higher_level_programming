=================
How to use Mylist
=================

'Mylist' from the '1-my_list' module has one method 'print_sorted';
which prints a list in ascending print_sort.

Doctest for the class Mylist
    >>> MyList = __import__('1-my_list').MyList

Correct Inputs
==============
Case: using a list
    >>> my_list = MyList([1, 5, 63, 2, 3])
    >>> my_list.print_sorted()
    [1, 2, 3, 5, 63]

    >>> my_list = MyList([1, 5.9, 5.85, 63, -50.3, 2, -3])
    >>> my_list.print_sorted()
    [-50.3, -3, 1, 2, 5.85, 5.9, 63]
    
    >>> my_list = MyList([3])
    >>> my_list.print_sorted()
    [3]

    >>> my_list = MyList([])
    >>> my_list.print_sorted()
    []

    >>> my_list = MyList([5, 5, 5, 5])
    >>> my_list.print_sorted()
    [5, 5, 5, 5]

    >>> my_list = MyList([5, 4, 3, 2, 1])
    >>> my_list.print_sorted()
    [1, 2, 3, 4, 5]

    >>> my_list = MyList(['you', 'me', 'Them', ''])
    >>> my_list.print_sorted()
    ['', 'Them', 'me', 'you']

    >>> my_list = MyList()
    >>> my_list.print_sorted()
    []



Incorrect Input
===============
Case: Mixing up data types in a list other than int and float
    >>> my_list = MyList(['you', 'me', 5])
    >>> my_list.print_sorted()
    Traceback (most recent call last):
    TypeError: '<' not supported between instances of 'int' and 'str'

    >>> my_list = MyList({'you', 'me', 'Them', ''})
    >>> my_list.print_sorted()
    ['', 'Them', 'me', 'you']

    >>> my_list = MyList(5, 6)
    Traceback (most recent call last):
    TypeError: list expected at most 1 argument, got 2

    >>> my_list = MyList('you')
    >>> my_list.print_sorted()
    ['o', 'u', 'y']
